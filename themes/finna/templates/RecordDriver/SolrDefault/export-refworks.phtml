<?
echo $this->partial('RecordDriver/SolrDefault/export-refworks-format.phtml');

$title = rtrim($this->driver->getTitle(), " /");
echo "T1 $title\n";

$series = $this->driver->tryMethod('getSeries');
if (is_array($series)) {
    foreach ($series as $current) {
        if (is_array($current)) {
            echo 'T2 ' . $current['name'] . "\n";
            if (!empty($current['number'])) {
                echo 'VO ' . $current['number'] . "\n";
            }
        } else {
            echo "T2 $current\n";
        }
    }
}

$containerTitle = $this->driver->tryMethod('getContainerTitle');
if (!empty($containerTitle)) {
    $formats = $this->driver->getFormats();
    if (end($formats) == '1/Book/BookSection/') {
        echo "T2 $containerTitle\n";
    } else {
        echo "JF $containerTitle\n";
    }
    $volume = $this->driver->tryMethod('getContainerVolume');
    if (!empty($volume)) {
        echo "VO $volume\n";
    }
    $number = $this->driver->tryMethod('getContainerIssue');
    if (!empty($number)) {
        echo "IS $number\n";
    }
    $page = $this->driver->tryMethod('getContainerStartPage');
    if (!empty($page)) {
        echo "SP $page\n";
        $end = $this->driver->tryMethod('getContainerEndPage');
        if (!empty($end)) {
            echo "OP $end\n";
        }
    }
}

if ($extents = $this->driver->tryMethod('getExtent')) {
    foreach ($extents as $extent) {
        echo "OP $extent\n";
    }
}

$author = $this->driver->tryMethod('getPrimaryAuthorForSearch');
if (empty($author)) {
    $author = $this->driver->tryMethod('getPrimaryAuthor');
}
if (!empty($author)) {
    echo "A1 $author\n";
}

$secondaryAuthors = $this->driver->tryMethod('getSecondaryAuthors', [true]);
if (is_array($secondaryAuthors)) {
    foreach ($secondaryAuthors as $current) {
        echo "A1 $current\n";
    }
}

$languages = $this->driver->tryMethod('getLanguages');
if (is_array($languages)) {
    foreach ($languages as $lang) {
        echo "LA $lang\n";
    }
}

$pubPlaces = $this->driver->tryMethod('getPlacesOfPublication');
$pubDates = $this->driver->tryMethod('getPublicationDates');
$pubNames = $this->driver->tryMethod('getPublishers');
if (is_array($pubPlaces) && is_array($pubDates) && is_array($pubNames)) {
    $total = max(count($pubPlaces), count($pubDates), count($pubNames));
    // if we have pub dates but no other details, we still want to export the year:
    if ($total == 0 && count($pubDates) > 0) {
        $total = 1;
    }
    for ($i = 0; $i < $total; $i++) {
        if (isset($pubPlaces[$i])) {
            echo "PP " . rtrim(str_replace(['[', ']'], '', $pubPlaces[$i]), ':, '). "\n";
        }
        if (isset($pubNames[$i])) {
            $pubName = preg_replace('/\s*:[^;:]*\bjakaja\b[^;:]*/', '', $pubNames[$i]);
            if ($pubName) {
                echo "PB " . rtrim($pubName, ", ") . "\n";
            }
        }
        $date = trim($pubDates[$i], '[]. ');
        if (strlen($date) > 4) {
            $date = $this->dateTime()->extractYear($date);
        }
        if ($date) {
            echo "YR $date\n";
        }
    }
}

$edition = $this->driver->tryMethod('getEdition');
if (!empty($edition)) {
    echo "ED $edition\n";
}

if ($urls = $this->record($this->driver)->getUrlList()) {
    foreach ($urls as $url) {
        echo "UL $url\n";
    }
    echo "LK " . $this->serverUrl($this->recordLink()->getUrl($this->driver)) . "\n";
} else {
    echo "UL " . $this->serverUrl($this->recordLink()->getUrl($this->driver)) . "\n";
}

$summary = $this->driver->tryMethod('getSummary');
if (is_array($summary)) {
    foreach ($summary as $current) {
        echo "AB $current\n";
    }
}

// Try to find a page count in the physical description:
$physical = $this->driver->tryMethod('getPhysicalDescriptions');
if (is_array($physical)) {
    foreach ($physical as $current) {
        if (preg_match('/([0-9]+\s*[sp]\b\.?)/', $current, $matches)) {
            echo "OP {$matches[1]}\n";
            break;
        }
    }
}

$notes = $this->driver->tryMethod('getGeneralNotes');
if (is_array($notes)) {
    foreach ($notes as $note) {
        echo "NO $note\n";
    }
}

if ($note = $this->driver->tryMethod('getDissertationNote')) {
    echo "NO $note\n";
}

$callNo = $this->driver->tryMethod('getCallNumber');
if (!empty($callNo)) {
    echo "CN $callNo\n";
}

$isbns = $this->driver->tryMethod('getISBNs');
if (is_array($isbns)) {
    foreach ($isbns as $isbn) {
        echo "SN $isbn\n";
    }
}

$issns = $this->driver->tryMethod('getISSNs', [true]);
if (is_array($issns)) {
    foreach ($issns as $issn) {
        echo "SN $issn\n";
    }
}

$subjects = $this->driver->tryMethod('getAllSubjectHeadings');
if (is_array($subjects)) {
    foreach ($subjects as $subject) {
        if (is_array($subject)) {
            $subject = array_map(
                function ($val) {
                    return rtrim($val, '. ');
                },
                $subject
            );
        } else {
            $subject = rtrim($subject, '. ');
        }
        $subject = is_array($subject) ? implode(' : ', $subject) : $subject;
        echo "K1 $subject\n";
    }
}

if ($doi = $this->driver->tryMethod('getCleanDOI')) {
    echo "DO $doi\n";
}

// Record separator:
echo "\n";
?>
