<!-- START of: finna - search/searchbox.phtml -->
<?
    $browse = isset($browse) ? $browse : false;
    $module = $this->layout()->templateDir;
    $action = $this->layout()->templateName;

    // Set default value if necessary:
    if (!isset($this->searchClassId)) {
        $this->searchClassId = $module == 'combined' ? 'Combined' : 'Solr';
    }

    // Load search actions and settings (if any):
    $options = $this->searchOptions($this->searchClassId);
    $handlers = $this->searchbox()->getHandlers(
        $this->searchClassId,
        isset($this->searchIndex) ? $this->searchIndex : null
    );
    $handlerCount = count($handlers);
    $basicSearch = $browse ? "browse-{$browse}" : $options->getSearchAction();
    $advSearch = $module != 'combined' ? $options->getAdvancedSearchAction() : 'search-advanced';
    $lastSort = $browse ? null: $this->searchMemory()->getLastSort($this->searchClassId);
    $lastLimit = $browse ? null: $this->searchMemory()->getLastLimit($this->searchClassId);
    $defaultSortApplied = !isset($this->params) || $lastSort == $options->getDefaultSortByHandler($this->params->getSearchHandler());

    $ignoreHiddenFilterMemory = isset($this->ignoreHiddenFilterMemory) && $this->ignoreHiddenFilterMemory;
    $hiddenFilters = $this->searchtabs()->getHiddenFilters($this->searchClassId, $ignoreHiddenFilterMemory);
    if (empty($hiddenFilters) && !$ignoreHiddenFilterMemory) {
        $hiddenFilters = $this->searchMemory()->getLastHiddenFilters($this->searchClassId);
        if (empty($hiddenFilters)) {
            $hiddenFilters = $this->searchtabs()->getHiddenFilters($this->searchClassId);
        }
    }

    // Set up Finna Main Tabs:
    if (!$browse) {
      if (($module === 'search' && $action === 'results' && $this->searchType != 'advanced')
         || ($module === 'metalib' && $action === 'search' && $this->searchType != 'advanced')
         || ($module === 'primo' && $action === 'search' && $this->searchType != 'advanced')
         || ($module == 'combined' && $action == 'results')
      ) {
         $searchTabs = $this->searchtabs()->getTabConfig($this->searchClassId, $this->lookfor, $this->searchIndex, $this->searchType, $hiddenFilters, $this->layout()->savedTabs);
         $this->layout()->finnaMainTabs = $this->context($this)->renderInContext('search/searchTabs', ['searchTabs' => $searchTabs, 'hiddenFilters' => $hiddenFilters]);
         $this->layout()->searchTabs = $searchTabs;
      }
    }
?>
<? if ($this->searchType != 'advanced'): ?>
  <?
     if($this->searchbox()->autocompleteEnabled($this->searchClassId)) {
      $phrase = $this->autocomplete()->getPhraseSearch();
      if (!$browse) {
        $activeTab = $this->searchClassId;
        if (isset($searchTabs)) {
           foreach ($searchTabs as $tab) {
              if ($tab['selected']) {
                 $activeTab = $tab['id'];
                 break;
              }
           }
        }

        $acFilters = [];
        foreach ($this->autocomplete()->getFilters($activeTab) as $filter) {
          $filters = [];
          foreach ($filter['filters'] as $item) {
            $filters[] = $item[0] . '#' . $item[1];
          }
          $acFilters[$filter['label']] = implode('&', $filters);
        }

        $acHandlers = $this->autocomplete()->getHandlers($activeTab);
      }
     }
  ?>

  <form role="search" class="searchForm navbar-form navbar-left col-xs-12 col-sm-10 col-md-8 col-lg-7  <?=$handlerCount < 2 ? 'input-field-only' :''; ?>" method="get" action="<?=$this->url($basicSearch)?>" name="searchForm" autocomplete="off">
    <label for="searchForm_lookfor" class="sr-only" hidden><?=$this->transEsc("Find")?></label><input class="searchForm_lookfor form-control search-query<? if($this->searchbox()->autocompleteEnabled($this->searchClassId)):?> autocomplete-finna searcher:<?=$this->escapeHtmlAttr($this->searchClassId) ?><?= !empty($activeTab) ? ' tab:' . $this->escapeHtmlAttr(str_replace(':', '###', $activeTab)) : ''?><?=!empty($browse) || $activeTab == 'Combined' ? ' onlySuggestions:1' : ''?><?= !$browse && in_array($activeTab, ['Combined','MetaLib','Primo']) ? ' suggestions:0' : ''?><?= !empty($acHandlers) ? ' handlers:' . implode('|', array_map(function($h) { return $h['handler']; }, $acHandlers)) : ''?><?= !empty($phrase) ? ' phrase:' . $this->escapeHtmlAttr($phrase) : ''?><?= !empty($acFilters) ? ' filters:' . $this->escapeHtmlAttr(implode('||', array_map(function($k, $v) { return $k . '|' . $v; }, array_keys($acFilters), $acFilters))) : ''?><? endif ?>" placeholder="<?=$this->transEsc("Find")?>..." id="searchForm_lookfor" type="text" name="lookfor" value="<?=$this->escapeHtmlAttr($this->lookfor)?>"/>
    <span class="clear-button<?=$this->lookfor ? '' : ' hidden'?>"></span>
    <? if ($handlerCount > 1): ?>
      <span class="hidden sr-only"><?=$this->transEsc("Narrow Search")?></span>
      <div class="dropdown form-control type-dropdown">
      <?
        $label = $handlers[0]['label'];
        $value = $handlers[0]['value'];
        foreach ($handlers as $handler) {
          if ($handler['selected']) {
            $label = $handler['label'];
            $value = $handler['value'];
            break;
          }
        }
      ?>
      <input type="hidden" name="type" value="<?=$this->escapeHtmlAttr($value)?>" class="searchForm_type" />
      <a href="#" class="dropdown-toggle" data-toggle="dropdown"><span><?=$this->transEsc($label)?></span> <i class="fa fa-arrow-down"></i></a>
      <ul class="dropdown-menu" data-native-menu="false">
        <? foreach ($handlers as $handler): ?>
          <li class="select-type">
            <input type="hidden" value="<?=$this->escapeHtmlAttr($handler['value'])?>" />
            <span><?=$this->transEsc($handler['label'])?></span>
          </li>
        <? endforeach; ?>
      </ul>
    </div>
    <? elseif ($handlerCount == 1): ?>
      <input type="hidden" name="type" value="<?=$this->escapeHtmlAttr($handlers[0]['value'])?>" class="searchForm_type" />
    <? endif; ?>
    <button type="submit" class="btn btn-primary"><i class="fa fa-search"></i> <span class="sr-only"><?=$this->transEsc("Find")?></span></button>

    <? $shards = $options->getShards(); if ($options->showShardCheckboxes() && !empty($shards)): ?>
      <?
      $selectedShards = isset($this->selectedShards)
          ? $this->selectedShards : $options->getDefaultSelectedShards();
      ?>
      <br />
      <? foreach ($shards as $shard => $val): ?>
        <? $isSelected = empty($selectedShards) || in_array($shard, $selectedShards); ?>
          <input type="checkbox" <?=$isSelected ? 'checked="checked" ' : ''?>name="shard[]" value='<?=$this->escapeHtmlAttr($shard)?>' /> <?=$this->transEsc($shard)?>
      <? endforeach; ?>
    <? endif; ?>
    <?
      $filterDetails = $this->searchbox()->getFilterDetails(
          isset($this->filterList) && is_array($this->filterList) ? $this->filterList : array(),
          isset($this->checkboxFilters) && is_array($this->checkboxFilters) ? $this->checkboxFilters : array()
      );
    ?>
     <? $defaultFilterState = $this->hasDefaultsApplied || $options->getRetainFilterSetting() || !$defaultSortApplied ? ' checked="checked"' : ''; ?>
     <? if (!$browse && (!empty($filterDetails) || !empty($this->savedSearches) || !$defaultSortApplied || (isset($this->searchIndex) && ($this->searchIndex != 'AllFields' && $handlerCount <= 1)))): ?>
          <div class="checkbox<?=$defaultFilterState?' checked' : ''?>">
        <label>
          <input onChange="$('.applied-filter').click();$('.navbar-form .checkbox').toggleClass('checked'); var sort = $(this).closest('form').find('input[name=sort]'); sort.val($('.navbar-form .checkbox').hasClass('checked') ? sort.data('value') : '');" type="checkbox"<?=$defaultFilterState?> class="searchFormKeepFilters"/>
          <?=$this->transEsc("basic_search_keep_filters")?>
        </label>
      </div>
      <div class="hidden">
        <? foreach ($filterDetails as $current): ?>
          <input class="applied-filter" id="<?=$this->escapeHtmlAttr($current['id'])?>" type="checkbox"<?=$defaultFilterState?> name="filter[]" value="<?=$this->escapeHtmlAttr($current['value'])?>" />
          <label for="<?=$this->escapeHtmlAttr($current['id'])?>"><?=$this->escapeHtml($current['value'])?></label>
        <? endforeach; ?>
        <? if (!empty($this->savedSearches)): ?>
          <? foreach ($this->savedSearches as $searchClass => $searchId): ?>
            <input class="applied-filter saved-search" id="search-<?=$this->escapeHtmlAttr($searchClass)?>" type="checkbox"<?=$defaultFilterState?> name="search[]" value="<?=$this->escapeHtmlAttr($searchClass . ':' . $searchId)?>" />
            <label for="<?=$this->escapeHtmlAttr($searchClass)?>"><?=$this->escapeHtml($searchId)?></label>
          <? endforeach; ?>
        <? endif; ?>
        <? if ($handlerCount <= 1 && isset($this->searchIndex)): ?>
          <input class="applied-filter" id="search-index" type="checkbox"<?=$defaultFilterState?> name="type" value="<?=$this->escapeHtmlAttr($this->searchIndex)?>" />
        <? endif; ?>
        <!-- this is a hidden element that flags whether or not default filters have been applied;
             it is intentionally unlabeled, as users are not meant to manipulate it directly. -->
        <input class="applied-filter" id="dfApplied" type="checkbox" name="dfApplied" value="1"<?=$defaultFilterState?> />
      </div>
    <? endif; ?>
    <? foreach ($hiddenFilters as $key => $filter): ?>
      <? foreach ($filter as $value): ?>
        <input type="hidden" name="hiddenFilters[]" value="<?=$this->escapeHtmlAttr($key) . ':' . $this->escapeHtmlAttr($value)?>" />
      <? endforeach; ?>
    <? endforeach; ?>
    <?
      /* Load hidden limit preference from Session */
      if (!empty($lastLimit)) {
        echo '<input type="hidden" name="limit" value="' . $this->escapeHtmlAttr($lastLimit) . '" />';
      }
      if (!empty($lastSort)) {
        echo '<input type="hidden" name="sort" value="' . ($defaultFilterState ? $this->escapeHtmlAttr($lastSort) : '') . '" data-value="' . $this->escapeHtmlAttr($lastSort) . '" />';
      }
    ?>
  </form>
  <? if ($advSearch): ?>
  <div class="col-md-4 col-lg-5">
    <a href="<?=$this->url($advSearch)?>" class="btn btn-link hidden-xs hidden-sm" rel="nofollow"><i class="fa fa-search-adv"></i> <?=$this->transEsc("Advanced Search")?></a>
    <? if ($module === 'search' && !$this->translationEmpty('tooltip_local_search_html')) :?><span class="tooltip-search-local pull-right hidden-xs" data-toggle="tooltip" data-placement="auto" data-html="true" data-original-title="<?=$this->transesc('tooltip_local_search_html')?>"><i class="fa fa-info-big"></i></span><? endif; ?>
    <? if ($module === 'primo' && !$this->translationEmpty('tooltip_pci_search_html')) :?><span class="tooltip-search-pci pull-right hidden-xs" data-toggle="tooltip" data-placement="auto" data-html="true" data-original-title="<?=$this->transesc('tooltip_pci_search_html')?>"><i class="fa fa-info-big"></i></span><? endif; ?>
    <? if ($module === 'metalib' && !$this->translationEmpty('tooltip_metalib_search_html')) :?><span class="tooltip-search-metalib pull-right hidden-xs" data-toggle="tooltip" data-placement="auto" data-html="true" data-original-title="<?=$this->transesc('tooltip_metalib_search_html')?>"><i class="fa fa-info-big"></i></span><? endif; ?>
  </div>
  <? endif; ?>
  <div class="row">
    <div class="col-xs-12 col-sm-10 col-md-8 col-lg-7 text-right">
      <? $mainPage = $action === 'home' && in_array($module, ['combined', 'metalib', 'primo', 'search']); ?>

      <? if ($browse || $mainPage): ?>
        <? if ($browse || $this->searchClassId != 'Solr'): ?>
        <a href="<?=$this->url('home');?>" class="btn btn-link"><i class="fa fa-search"></i> <?=$this->transEsc("Basic Search")?></a>
        <? endif; ?>

        <? if ($this->primo()->isAvailable() && ($browse || $this->searchClassId !== 'Primo')) : ?>
        <a href="<?=$this->url('primo-home');?>" class="btn btn-link"><i class="fa fa-search"></i> <?=$this->transEsc("Primo Search")?></a>
        <? endif; ?>

        <? if ($this->metalib()->isAvailable() && ($browse || $this->searchClassId !== 'MetaLib')) : ?>
        <a href="<?=$this->url('metalib-home');?>" class="btn btn-link"><i class="fa fa-search"></i> <?=$this->transEsc("MetaLib Search")?></a>
        <? endif; ?>
      <? endif; ?>

      <? if ($advSearch): ?>
      <a href="<?=$this->url($advSearch)?>" class="btn btn-link hidden-xs hidden-md hidden-lg"><i class="fa fa-search-adv"></i><?=$this->transEsc("Advanced Search")?></a>
      <? endif; ?>
    </div>
  </div>
<? endif; ?>
<!-- END of: finna - search/searchbox.phtml -->
